---
- name: RedHat - Kernel Devel
  ansible.builtin.dnf:
    # Disable updates so on fresh installs this will get the headers matching the current version
    disablerepo: updates
    name:
      - kernel-headers
      - kernel-devel
    state: present

# Need to upgrade vim-minimal first, otherwise there are conflicts
- name: RedHat - Update vim-minimal
  ansible.builtin.dnf:
    name:
      - vim-minimal
    state: present

# Install vim separately due to conflicts in upgrade / install
- name: RedHat - Update vim
  ansible.builtin.dnf:
    name:
      - vim
    state: present

- name: RedHat - Remove conflicting packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: absent
  loop:
    - ffmpeg-free  # conflicts with ffmpeg
    - libswscale-free  # conflicts with ffmpeg-libs

- name: RedHat - Install packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  retries: 3
  delay: 5
  register: redhat_install_packages
  until: redhat_install_packages is succeeded
  loop:
    - autoconf
    - automake
    - bash
    - bash-completion
    - bison
    - bzip2
    - bzip2-devel
    - cargo  # Rust's package manager and build tool
    - clang  # Front-end for the LLVM compiler
    - clippy  # Lints to catch common mistakes and improve your Rust code
    - cmake  # Needed for installing some rust crates
    - curl
    - dconf
    - dnf-automatic
    - ffmpeg  # Improves video playback
    - flatpak
    - gcc
    - gcc-c++
    - gdb
    - git
    - gitk
    - graphviz
    - jq
    - libcurl-devel
    - libffi-devel
    - libnotify
    - libtool
    - make
    - mold  # Faster linker for compiling
    - nodejs
    - npm
    - nvtop  # Top for GPUs
    - openssl-devel
    - patch
    - pcp-system-tools  # dstat
    - podman
    - podman-docker  # emulate docker
    - python3-dbus
    - readline-devel
    - redhat-rpm-config
    - rust
    - rust-analyzer  # Rust Language Server for IDE integration
    - rust-gdb  # GDB pretty printers for Rust
    - rust-lldb  # LLDB pretty printers for Rust
    - rust-src  # Rust systems programming language - source code
    - rustfmt  # Tool to find and fix Rust formatting issues
    - samba-client
    - seahorse  # key management
    - setools-console
    - sqlite-devel
    - sysstat  # iostat
    - tree
    - unzip
    - webp-pixbuf-loader  # Allows for viewing of webp images
    - wget
    - xz
    - xz-devel
    - zlib-devel
    - zsh
    - zstd  # Zstandard - Fast real-time compression algorithm

- name: RedHat - Install non WSL packages
  ansible.builtin.dnf:
    pkg: "{{ item }}"
    state: present
  loop:
    - 1password
    - 1password-cli
    - code  # VSCode
  when: not running_in_wsl

- name: RedHat - Best effort to install optional packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  retries: 3
  delay: 5
  register: redhat_install_optional_packages
  until: redhat_install_optional_packages is succeeded
  loop:
    - dconf-editor
    - dejavu-sans-fonts
    - dkms
    - fuse-sshfs
    - go-task  # CLI tool for taskfiles
    - google-noto-sans-fonts
    - google-roboto-condensed-fonts
    - google-roboto-fonts
    - google-roboto-slab-fonts
    - htop
    - ImageMagick
    - libheif
    - libyaml-devel
    - mint-y-icons
    - mint-y-theme
    - ncdu
    - neofetch
    - p7zip
    - pv
    - ripgrep
    - sd  # like sed but with python regex
    - ytop  # CLI system monitoring
    - zoom
  failed_when: false

- name: RedHat - Install unsigned remote packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
  loop:
    - https://github.com/wagoodman/dive/releases/download/v{{ dive_version }}/dive_{{ dive_version }}_linux_amd64.rpm

### --- Distro specific ---

- name: CentOS Packages
  ansible.builtin.import_tasks: system_redhat_centos_packages.yml
  when: ansible_distribution == 'CentOS'

- name: Fedora Packages
  ansible.builtin.import_tasks: system_redhat_fedora_packages.yml
  when: ansible_distribution == 'Fedora'
