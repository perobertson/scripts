---
- name: All - Git update tools  # noqa git-latest
  diff: false
  ansible.builtin.git:
    repo: https://gitlab.com/perobertson/cli-tools.git
    dest: ~/Applications/cli-tools

# Needed for user systemd scripts
- name: All - Create ~/bin
  tags: [systemd]
  ansible.builtin.file:
    path: $HOME/bin
    state: directory
    mode: '0700'

- name: All - Populate ~/bin
  tags: [systemd]
  diff: true
  ansible.builtin.file:
    src: "{{ playbook_dir }}/files/home/user/bin/{{ item }}"
    dest: "$HOME/bin/{{ item }}"
    state: link
  loop:
    - README.md
    - aws_iam_to_ses.py
    - create-bootable-usb.bash
    - install-aws.bash
    - install-nvidia.bash

# For user systemd
# https://www.freedesktop.org/software/systemd/man/file-hierarchy.html#Home%20Directory
- name: All - Create ~/.local/bin
  tags: [systemd]
  ansible.builtin.file:
    path: "$HOME/{{ item }}"
    state: directory
    mode: '0700'
  loop:
    - .local/bin
    - .local/lib

- name: All - Populate user systemd scripts
  tags: [systemd]
  diff: true
  ansible.builtin.copy:
    src: "files/home/user/.local/bin/{{ item.name }}"
    dest: "$HOME/.local/bin/{{ item.name }}"
    mode: "{{ item.mode }}"
  loop:
    - name: pkenv-update
      mode: '0700'
    - name: pyenv-update
      mode: '0700'
    - name: rbenv-update
      mode: '0700'
    - name: tfenv-update
      mode: '0700'

- name: All - pkenv-update
  ansible.builtin.command:
    cmd: "$HOME/.local/bin/pkenv-update"
  register: pkenv_update_result
  changed_when: pkenv_update_result.stdout_lines | unique != ['Already up to date.']

- name: All - pyenv-update
  ansible.builtin.command:
    cmd: "$HOME/.local/bin/pyenv-update"
  register: pyenv_update_result
  changed_when: pyenv_update_result.stdout_lines | unique != ['Already up to date.']

- name: All - rbenv-update
  ansible.builtin.command:
    cmd: "$HOME/.local/bin/rbenv-update"
  register: rbenv_update_result
  changed_when: rbenv_update_result.stdout_lines | unique != ['Already up to date.']

- name: All - tfenv-update
  ansible.builtin.command:
    cmd: "$HOME/.local/bin/tfenv-update"
  register: tfenv_update_result
  changed_when: tfenv_update_result.stdout_lines | unique != ['Already up to date.']
