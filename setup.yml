---
- hosts: localhost
  vars:
    docker_compose_version: 1.25.4
  tasks:
    - name: debug info
      debug:
        msg: "{{ ansible_facts }}"
      tags: [ never, debug ]

    - name: Debian - Add Docker signing key
      become: true
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_os_family == 'Debian'
      tags: [ dev, repo, docker ]
    - name: Debian - Add Docker repo
      become: true
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_lsb['codename'] }} stable"
        filename: docker
        state: present
      when: ansible_os_family == 'Debian'
      tags: [ dev, repo, docker ]
    - name: Debian - Add Sublime-Text signing key
      become: true
      apt_key:
        url: https://download.sublimetext.com/sublimehq-pub.gpg
        state: present
      when: ansible_os_family == 'Debian'
      tags: [ dev, repo ]
    - name: Debian - Add Sublime Text Repo
      become: true
      apt_repository:
        repo: deb https://download.sublimetext.com/ apt/stable/
        filename: sublime-text
        state: present
      when: ansible_os_family == 'Debian'
      tags: [ dev, repo ]
    - name: Ubuntu <18 - Add flatpak apt repository
      become: true
      apt_repository:
        repo: ppa:alexlarsson/flatpak
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 18

    - name: RedHat - Add dnf plugins
      become: true
      dnf:
        name:
          - dnf-plugins-core
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add Docker repository
      become: true
      yum_repository:
        file: docker-ce
        name: docker-ce-stable
        description: "Docker CE Stable - $basearch"
        baseurl: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/$releasever/$basearch/stable"
        enabled: yes
        gpgcheck: yes
        gpgkey: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        repo_gpgcheck: yes
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo, docker ]
    - name: RedHat - Add Google Cloud SDK repository
      become: true
      yum_repository:
        file: google-cloud-sdk
        name: google-cloud-sdk
        description: Google Cloud SDK
        baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add Keybase repository
      become: true
      yum_repository:
        file: keybase
        name: keybase
        description: keybase
        baseurl: http://prerelease.keybase.io/rpm/x86_64
        enabled: yes
        gpgcheck: yes
        gpgkey: https://keybase.io/docs/server_security/code_signing_key.asc
        metadata_expire: '60'
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add Kubernetes repository
      become: true
      yum_repository:
        file: kubernetes
        name: kubernetes
        description: Kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add Slack repository
      become: true
      yum_repository:
        file: slack
        name: slack
        description: Slack - $basearch
        # Slack uploads everything to Fedora 21 for some reason
        baseurl: https://packagecloud.io/slacktechnologies/slack/{{ ansible_distribution | lower }}/21/$basearch
        enabled: yes
        gpgcheck: yes
        gpgkey:
          - https://slack.com/gpg/slack_pubkey.gpg
          - https://slack.com/gpg/slack_pubkey_2019.gpg
        sslverify: yes
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add Sublime-Text repository
      become: true
      yum_repository:
        file: sublime-text
        name: sublime-text
        description: Sublime Text - x86_64 - Stable
        baseurl: https://download.sublimetext.com/rpm/stable/x86_64
        enabled: yes
        gpgcheck: yes
        gpgkey:
          - https://download.sublimetext.com/sublimehq-rpm-pub.gpg
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]
    - name: RedHat - Add VSCode repository
      become: true
      yum_repository:
        file: vscode
        name: code
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        enabled: yes
        gpgcheck: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
      when: ansible_os_family == 'RedHat'
      tags: [ dev, repo ]

    - name: Fedora <= 25 - Add MySQL community repository
      become: true
      dnf:
        name:
          - "https://dev.mysql.com/get/mysql57-community-release-fc{{ ansible_distribution_major_version|int }}-10.noarch.rpm"
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int <= 25
      tags: [ dev, repo ]
    - name: Fedora 26,27 - Add MySQL community repository
      become: true
      dnf:
        name:
          - "https://dev.mysql.com/get/mysql80-community-release-fc{{ ansible_distribution_major_version|int }}-1.noarch.rpm"
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 26 and ansible_distribution_major_version|int <= 27
      tags: [ dev, repo ]
    - name: Fedora - Add RPMFusion repository
      become: true
      dnf:
        name:
          - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version|int }}.noarch.rpm
          - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version|int }}.noarch.rpm
        state: present
      when: ansible_distribution == 'Fedora'
      tags: [ dev, repo ]
    - name: Fedora 30+ - Add lazygit repository
      become: true
      command:
        cmd: dnf copr enable atim/lazygit -y
        creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:atim:lazygit.repo
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 30
      tags: [ dev, repo ]
    - name: Fedora 30+ - Add Razer repository
      become: true
      yum_repository:
        file: razer
        name: razer
        description: Razer drivers (Fedora {{ ansible_distribution_major_version|int }})
        baseurl: "https://download.opensuse.org/repositories/hardware:/razer/Fedora_{{ ansible_distribution_major_version|int }}/"
        enabled: yes
        gpgcheck: yes
        gpgkey: "https://download.opensuse.org/repositories/hardware:/razer/Fedora_{{ ansible_distribution_major_version|int }}/repodata/repomd.xml.key"
        repo_gpgcheck: yes
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 30
      tags: [ dev, repo ]

    - name: Debian - Install common packages
      become: true
      apt:
        name: &common_packages
          - crudini
          - docker-ce
          - flatpak
          - htop
          - python3-dbus
          - seahorse # key management
          - sqlitebrowser
          - sublime-merge
          - sublime-text
          - sysstat # iostat
          - zsh
        state: present
        update_cache: yes
      when: ansible_os_family == 'Debian'
      tags: [ dev, docker ]

    - name: RedHat - Install common packages
      become: true
      dnf:
        name: *common_packages
        state: present
      when: ansible_os_family == 'RedHat'
      tags: [ dev ]

    - name: Debian - Install packages
      become: true
      apt:
        pkg:
          - libglib2.0-bin # gsettings
        state: present
      when: ansible_os_family == 'Debian'
      tags: [ dev ]

    - name: Ubuntu 18+ - Install packages
      become: true
      apt:
        pkg:
          - flameshot
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 18
      tags: [ dev ]

    # Need to upgrade vim-minimal first, otherwise there are conflicts
    - name: RedHat - Update vim-minimal
      become: true
      dnf:
        name:
          - vim-minimal
        state: latest
      when: ansible_os_family == 'RedHat'
      tags: [ dev ]

    # Install vim separately due to conflicts in upgrade / install
    - name: RedHat - Update vim
      become: true
      dnf:
        name:
          - vim
        state: latest
      when: ansible_os_family == 'RedHat'
      tags: [ dev ]

    - name: RedHat - Install packages
      become: true
      dnf:
        name:
          - autoconf
          - autojump-zsh
          - automake
          - bison
          - bzip2
          - bzip2-devel
          - curl
          - dkms
          - dnf-automatic
          - fuse-sshfs
          - gcc
          - gcc-c++
          - git
          - gitk
          - google-cloud-sdk
          - graphviz
          - gtk-murrine-engine
          - ImageMagick
          - jq
          - julia
          - keybase
          - kubectl
          - libcurl-devel
          - libffi-devel
          - libnotify
          - libtool
          - libyaml-devel
          - levien-inconsolata-fonts
          - make
          - mozilla-fira-mono-fonts
          - mozilla-fira-sans-fonts
          - mozilla-fira-fonts-common
          - ncdu
          - nodejs
          - npm
          - openssl-devel
          - p7zip
          - patch
          - pcp-system-tools # dstat
          - perl
          - pssh
          - pv
          - readline-devel
          - redhat-lsb
          - redhat-rpm-config
          - samba-client
          - ShellCheck
          - slack
          - sqlite-devel
          - tree
          - virt-what
          - vlc
          - wget
          - xz
          - xz-devel
          - zlib-devel
        state: present
      when: ansible_os_family == 'RedHat'
      tags: [ dev ]

    - name: Fedora 26+ - Install packages
      become: true
      dnf:
        name:
          - flameshot
          - fzf
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 26
      tags: [ dev ]

    - name: Fedora 27+ - Install packages
      become: true
      dnf:
        name:
          - podman
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 27
      tags: [ dev ]

    - name: Fedora <= 27 - Install mysql-community-devel
      become: true
      dnf:
        name:
          - mysql-community-devel # from the community repository
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int <= 27
      tags: [ dev ]

    - name: Fedora 28+ - Install packages
      become: true
      dnf:
        name:
          - code
          - community-mysql-devel # from fedora modular
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 28
      tags: [ dev ]

    - name: Fedora 29+ - Install packages
      become: true
      dnf:
        name:
          - bat
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 29
      tags: [ dev ]

    - name: Fedora 30+ - Install packages
      become: true
      dnf:
        name:
          - lazygit
          - openrazer-meta
          - polychromatic  # razer device configuration
        state: present
      when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 30
      tags: [ dev ]

    - name: RedHat - Kernel Devel
      become: true
      dnf:
        # Disable updates so on fresh installs this will get the headers matching the current version
        disablerepo: updates
        name:
          - kernel-headers
          - kernel-devel
        state: present
      when: ansible_os_family == 'RedHat'
      tags: [ dev ]

    - name: All - Install minikube
      become: true
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /usr/local/bin/minikube
      tags: [ dev ]

    - name: All - Enable execue for minikube
      become: true
      file:
        path: /usr/local/bin/minikube
        mode: +x
      tags: [ dev ]

    - name: All - Install docker-compose {{ docker_compose_version }}
      become: true
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_machine }}"
        dest: /usr/local/bin/docker-compose
      tags: [ dev, docker ]

    - name: All - Enable execue for docker-compose
      become: true
      file:
        path: /usr/local/bin/docker-compose
        mode: +x
      tags: [ dev, docker ]

    - name: All - add user to docker group, use zsh
      become: true
      user:
        name: "{{ ansible_user_id }}"
        append: yes
        groups: docker
        shell: /usr/bin/zsh
      tags: [ dev, docker ]

    - name: All - pip install dev tools
      no_log: true
      pip:
        extra_args: --user
        name:
          - ansible-lint<5.0.0,>=4.2.0
          - awscli<2.0.0,>=1.18.21
          - aws-credentials
          - boto3<2.0.0,>=1.12.21
          - dlint
          - flake8<4.0.0,>=3.7.9
          - flake8-annotations
          - flake8-docstrings
          - flake8-import-order
          - importlib-metadata<1.2.0,>=1.1.3
          - ipdb
          - ipython<8.0.0,>=7.0.0
          - jedi
          - keyring<21.0.0,>=20.0.1
          - pdbpp
          - pep8-naming
          - pexpect<5.0.0,>=4.7.0
          - poetry<2.0.0,>=1.0.5
          - pre-commit<3.0.0,>=1.21.0 # 2.0.0 drops support for python 3.5
          - six
          - termcolor<2.0.0,>=1.1.0
          - tldr
        state: latest
      register: pip_out
      ignore_errors: True
      tags: [ pip ]
    - name: All - pip debug install failure
      command: pip --version
      when: pip_out.failed
      tags: [ pip ]
    - name: All - pip show install failure
      debug:
        msg: "{{ pip_out.msg.split('\n') }}"
      failed_when: true
      when: pip_out.failed
      tags: [ pip ]
    - name: All - pip show installed
      debug:
        msg:
          stdout: "{{ pip_out.stdout_lines }}"
          stderr: "{{ pip_out.stderr_lines }}"
      when: pip_out.changed
      tags: [ pip ]
    - name: All - pip check
      command: pip check
      when: pip_out.changed
      tags: [ pip ]

    - name: All - Git update pyenv
      diff: false
      git:
        repo: https://github.com/pyenv/pyenv.git
        dest: ~/Applications/pyenv
      tags: [ git ]

    - name: All - Git update pyenv plugins
      diff: false
      git:
        repo: "{{ item.repo }}"
        dest: "~/Applications/pyenv/plugins/{{ item.name }}"
      loop:
        - repo: https://github.com/pyenv/pyenv-doctor.git
          name: pyenv-doctor
        - repo: https://github.com/pyenv/pyenv-virtualenv.git
          name: pyenv-virtualenv
      tags: [ git ]

    - name: All - Git update rbenv
      diff: false
      git:
        repo: https://github.com/rbenv/rbenv.git
        dest: ~/Applications/rbenv
      tags: [ git ]

    - name: All - Git update rbenv - ruby build
      diff: false
      git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: ~/Applications/rbenv/plugins/ruby-build

    - name: All - Configure rbenv
      command:
        chdir: ~/Applications/rbenv
        cmd: src/configure
      tags: [ git ]

    - name: All - Make rbenv
      command:
        chdir: ~/Applications/rbenv
        cmd: make -C src
      tags: [ git ]

    - name: All - Git update tfenv
      diff: false
      git:
        repo: https://github.com/tfutils/tfenv.git
        dest: ~/Applications/tfenv
      tags: [ git ]

    - name: RedHat - Configure security updates
      become: true
      diff: true
      copy:
        src: files/etc/dnf/automatic.conf
        dest: /etc/dnf/automatic.conf
      when: ansible_os_family == 'RedHat'
      tags: [ system ]
    - name: RedHat - Configure security updates file permissions
      become: true
      file:
        path: /etc/dnf/automatic.conf
        mode: '0644'
      when: ansible_os_family == 'RedHat'
      tags: [ system ]

    ### ------------------ Userspace ---------------------------------

    - import_tasks: flatpacks.yml

    ### ------------------ User Settings -----------------------------

    - name: All - Fetch gsettings schemas
      no_log: true
      command: gsettings list-schemas
      ignore_errors: yes
      register: gsettings_schemas
      tags: [ ui ]

    - name: UI - Show clock seconds
      command: gsettings set org.cinnamon.desktop.interface clock-show-seconds true
      when: "'org.cinnamon.desktop.interface' in gsettings_schemas.stdout_lines"
      tags: [ ui ]

    - name: UI - Set monospace font
      command: gsettings set org.gnome.desktop.interface monospace-font-name 'Inconsolata 16'
      when: "'org.gnome.desktop.interface' in gsettings_schemas.stdout_lines"
      tags: [ ui ]

    - name: UI - Files date format
      command: gsettings set org.nemo.preferences date-format 'iso'
      when: "'org.nemo.preferences' in gsettings_schemas.stdout_lines"
      tags: [ ui ]

    - name: UI - Files default folder view
      command: gsettings set org.nemo.preferences default-folder-viewer 'list-view'
      when: "'org.nemo.preferences' in gsettings_schemas.stdout_lines"
      tags: [ ui ]

    - name: UI - Xresources
      diff: true
      copy:
        src: files/home/user/.Xresources
        dest: ~/.Xresources
      tags: [ ui ]

    ### --------------------- IDEs -------------------------------------------
    - name: All - Sublime Create packages directory
      file:
        path: ~/.config/sublime-text-3/Installed Packages
        state: directory
      tags: [ ide ]

    - name: All - Sublime Create user packages directory
      file:
        path: ~/.config/sublime-text-3/Packages/User
        state: directory
      tags: [ ide ]

    - name: All - Sublime check if package control exists
      stat:
        path: ~/.config/sublime-text-3/Installed Packages/Package Control.sublime-package
      register: sublime_package_control
      tags: [ ide ]

    - name: All - Sublime download package control
      get_url:
        url: https://packagecontrol.io/Package%20Control.sublime-package
        dest: ~/.config/sublime-text-3/Installed Packages/Package Control.sublime-package
      when: not sublime_package_control.stat.exists
      tags: [ ide ]

    ### --------------------- Dotfiles ---------------------------------------
    - name: All - Check if dotfiles exist
      stat:
        path: ~/Applications/dotfiles
      register: dotfiles
      tags: [ dotfiles ]

    - name: All - Stash dotfile changes
      command:
        chdir: ~/Applications/dotfiles
        cmd: git stash
      when: dotfiles.stat.isdir is defined and dotfiles.stat.isdir
      register: stashed_changes
      tags: [ dotfiles ]

    - name: All - Git update dotfiles
      git:
        repo: https://gitlab.com/perobertson/dotfiles.git
        dest: ~/Applications/dotfiles
        version: master
      tags: [ dotfiles ]

    - name: All - UnStash dotfile changes
      command:
        chdir: ~/Applications/dotfiles
        cmd: git stash pop
      when: stashed_changes.stdout is defined and stashed_changes.stdout != 'No local changes to save'
      tags: [ dotfiles ]

    - name: All - Install Dotfiles
      command: ~/Applications/dotfiles/install.py
      tags: [ dotfiles ]
