---
- name: All - Set UI settings
  tags: [cinnamon, gnome, files]
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  loop:
    - key: /org/cinnamon/desktop/interface/clock-show-seconds
      value: 'true'
    - key: /org/cinnamon/enable-indicators
      value: 'true'
    - key: /org/gnome/desktop/interface/monospace-font-name
      value: "'Inconsolata 14'"
    - key: /org/nemo/preferences/date-format
      value: "'iso'"
    - key: /org/nemo/preferences/default-folder-viewer
      value: "'list-view'"

- name: All - Configure Xresources
  diff: true
  ansible.builtin.copy:
    src: files/home/user/.Xresources
    dest: ~/.Xresources
    mode: '0664'

- name: All - Set terminal settings
  tags: [terminal]
  community.general.dconf:
    key: "/org/gnome/terminal/legacy/profiles:/:e7aeecbb-8907-4e08-916e-749914c7b0b7/{{ item.key }}"
    value: "{{ item.value | string }}"
    state: present
  loop:
    - key: audible-bell
      value: "false"
    - key: background-color
      value: "'rgb(46,52,54)'"
    - key: background-transparency-percent
      value: 7
    - key: bold-is-bright
      value: "false"
    - key: font
      value: "'Fira Mono 14'"
    - key: foreground-color
      value: "'rgb(211,215,207)'"
    - key: palette
      value:
        - 'rgb(7,54,66)'
        - 'rgb(220,50,47)'
        - 'rgb(133,153,0)'
        - 'rgb(181,137,0)'
        - 'rgb(38,139,210)'
        - 'rgb(211,54,130)'
        - 'rgb(42,161,152)'
        - 'rgb(238,232,213)'
        - 'rgb(0,43,54)'
        - 'rgb(203,75,22)'
        - 'rgb(88,110,117)'
        - 'rgb(101,123,131)'
        - 'rgb(131,148,150)'
        - 'rgb(108,113,196)'
        - 'rgb(147,161,161)'
        - 'rgb(253,246,227)'
    - key: text-blink-mode
      value: "'always'"
    - key: use-system-font
      value: "true"
    - key: use-theme-colors
      value: "true"
    - key: use-transparent-background
      value: "true"
    - key: visible-name
      value: "'Managed by Ansible'"

- name: All - Discover gnome terminal profiles
  tags: [terminal]
  community.general.dconf:
    key: "/org/gnome/terminal/legacy/profiles:/list"
    state: read
  register: gnome_terminal_profiles

- name: All - Parse gnome terminal profiles
  tags: [terminal]
  ansible.builtin.set_fact:
    gnome_terminal_profiles_list: "{{ gnome_terminal_profiles.value or '[]' | replace(\"'\", '\"') | from_json }}"

- name: All - Append new profile id to list
  tags: [terminal]
  ansible.builtin.set_fact:
    # list.append returns None which is falsey so use or to print out the updated value
    updated_gnome_terminal_profiles_list: "{{
      gnome_terminal_profiles_list.append('e7aeecbb-8907-4e08-916e-749914c7b0b7')
      or gnome_terminal_profiles_list
      | unique | sort
      }}"

- name: All - Format gnome terminal list to dconf format
  tags: [terminal]
  ansible.builtin.set_fact:
    updated_gnome_terminal_profiles_str: "{{
      updated_gnome_terminal_profiles_list
      | string | regex_replace('\"', \"'\")
      }}"

- name: All - Add profile to terminal list
  tags: [terminal]
  community.general.dconf:
    key: "/org/gnome/terminal/legacy/profiles:/list"
    value: "{{ updated_gnome_terminal_profiles_str | string }}"
    state: present

- name: All - Set default gnome terminal
  tags: [terminal]
  community.general.dconf:
    key: "/org/gnome/terminal/legacy/profiles:/default"
    value: "'e7aeecbb-8907-4e08-916e-749914c7b0b7'"
    state: present

### Cursor

- name: All - Check if /usr/share/icons/volantes_cursors/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: /usr/share/icons/volantes_cursors/index.theme
  register: stat_sys_volantes_cursors

- name: All - Check if ~/.local/share/icons/volantes_cursors/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: ~/.local/share/icons/volantes_cursors/index.theme
  register: stat_usr_volantes_cursors

- name: All - Set cinnamon cursor theme
  tags: [cinnamon]
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  loop:
    - key: /org/cinnamon/desktop/interface/cursor-theme
      value: "'volantes_cursors'"
  when: stat_sys_volantes_cursors.stat.exists or stat_usr_volantes_cursors.stat.exists

### Icons

- name: All - Check if /usr/share/icons/Mint-Y-Dark-Teal/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: /usr/share/icons/Mint-Y-Dark-Teal/index.theme
  register: stat_sys_mint_y_icons

- name: All - Check if ~/.local/share/icons/Mint-Y-Dark-Teal/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: ~/.local/share/icons/Mint-Y-Dark-Teal/index.theme
  register: stat_usr_mint_y_icons

- name: All - Set cinnamon icon theme
  tags: [cinnamon]
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  loop:
    # Icons
    - key: /org/cinnamon/desktop/interface/icon-theme
      value: "'Mint-Y-Dark-Teal'"
  when: stat_sys_mint_y_icons.stat.exists or stat_usr_mint_y_icons.stat.exists

### Remaining UI themes

- name: All - Check if /usr/share/themes/Mint-Y-Dark-Teal/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: /usr/share/themes/Mint-Y-Dark-Teal/index.theme
  register: stat_sys_mint_y_theme

- name: All - Check if ~/.local/share/themes/Mint-Y-Dark-Teal/index.theme exists
  tags: [cinnamon]
  ansible.builtin.stat:
    path: ~/.local/share/themes/Mint-Y-Dark-Teal/index.theme
  register: stat_usr_mint_y_theme

- name: All - Set cinnamon theme
  tags: [cinnamon]
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  loop:
    # Controls
    - key: /org/cinnamon/desktop/interface/gtk-theme
      value: "'Mint-Y-Dark-Teal'"
    # Desktop
    - key: /org/cinnamon/theme/name
      value: "'Mint-Y-Dark-Teal'"
    # Window Borders
    - key: /org/cinnamon/desktop/wm/preferences/theme
      value: "'Mint-Y'"
  when: stat_sys_mint_y_theme.stat.exists or stat_usr_mint_y_theme.stat.exists

### Keybindings

- name: All - Discover cinnamon keybindings list
  tags: [cinnamon]
  community.general.dconf:
    key: "/org/cinnamon/desktop/keybindings/custom-list"
    state: read
  register: dconf_cinnamon_keybindings_list

- name: All - Parse cinnamon keybindings list
  tags: [cinnamon]
  ansible.builtin.set_fact:
    cinnamon_keybindings_list: "{{ dconf_cinnamon_keybindings_list.value or '[]' | replace(\"'\", '\"') | from_json }}"

- name: All - Append 1password to the keybinding list
  tags: [cinnamon]
  ansible.builtin.set_fact:
    # list.append returns None which is falsey so use or to print out the updated value
    updated_cinnamon_keybindings_list: "{{
      cinnamon_keybindings_list.append('1password')
      or cinnamon_keybindings_list
      | unique | sort
      }}"

- name: All - Format cinnamon keybindings list to dconf format
  tags: [cinnamon]
  ansible.builtin.set_fact:
    updated_cinnamon_keybindings_list_str: "{{
      updated_cinnamon_keybindings_list
      | string | regex_replace('\"', \"'\")
      }}"

- name: All - cinnamon keybinding 1password - binding
  tags: [cinnamon]
  community.general.dconf:
    key: "/org/cinnamon/desktop/keybindings/custom-keybindings/1password/binding"
    value: "['<Shift><Super>exclam']"
    state: present

- name: All - cinnamon keybinding 1password - command
  tags: [cinnamon]
  community.general.dconf:
    key: "/org/cinnamon/desktop/keybindings/custom-keybindings/1password/command"
    value: "'1password --toggle'"
    state: present

- name: All - cinnamon keybinding 1password - name
  tags: [cinnamon]
  community.general.dconf:
    key: "/org/cinnamon/desktop/keybindings/custom-keybindings/1password/name"
    value: "'1password'"
    state: present

- name: All - Update cinnamon keybindings list
  tags: [cinnamon]
  community.general.dconf:
    key: "/org/cinnamon/desktop/keybindings/custom-list"
    value: "{{ updated_cinnamon_keybindings_list_str | string }}"
    state: present
