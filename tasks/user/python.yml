---
- name: All - pip install wheel
  tags: [ user, pip ]
  # Install wheel first which is needed to compile other packages
  pip:
    extra_args: --user
    name:
      - wheel
    state: present

- name: All - pip install dev tools
  tags: [ user, pip ]
  no_log: true
  pip:
    extra_args: --user
    name:
      - ansible-lint<5.0.0,>=4.2.0
      - aws-credentials
      - awscli<2.0.0,>=1.18.21
      - boto3<2.0.0,>=1.12.21
      - diagrams
      - dlint
      - flake8-annotations
      - flake8-docstrings
      - flake8-import-order
      - flake8<4.0.0,>=3.7.9
      - importlib-metadata<1.2.0,>=1.1.3
      - importlib-resources<2.0.0,>=1.0.0
      - ipdb
      - ipython<8.0.0,>=7.0.0
      - jedi
      - keyring<21.0.0,>=20.0.1
      - pdbpp
      - pep8-naming
      - pexpect<5.0.0,>=4.7.0
      - poetry<2.0.0,>=1.0.5
      - pre-commit<3.0.0,>=2.4.0
      - psutil>=4.0.0
      - six
      - termcolor<2.0.0,>=1.1.0
      - tldr
    state: latest
  register: pip_out
  ignore_errors: True

- name: All - pip debug install failure
  tags: [ user, pip ]
  command: pip --version
  when: pip_out.failed

- name: All - pip show install failure
  tags: [ user, pip ]
  debug:
    msg: "{{ pip_out.msg.split('\n') }}"
  failed_when: true
  when: pip_out.failed

- name: All - pip show installed
  tags: [ user, pip ]
  debug:
    msg:
      stdout: "{{ pip_out.stdout_lines }}"
      stderr: "{{ pip_out.stderr_lines }}"
  when: pip_out.changed

- name: All - pip check
  tags: [ user, pip ]
  command: pip check
  when: pip_out.changed
