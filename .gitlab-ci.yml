.ubuntu_setup: &ubuntu_setup
  before_script:
    - whoami
    - echo "$HOME"
    - pwd
    - ls -laH
    - apt-get update
    - apt-get install -y curl sudo
    - "echo '%sudo  ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci"
    - useradd --user-group --create-home --groups=sudo --shell=/bin/bash public
    - cat /etc/passwd
    - cat /etc/group


.fedora_setup: &fedora_setup
  before_script:
    - whoami
    - echo "$HOME"
    - pwd
    - ls -laH
    - dnf install -y sudo
    - "echo '%wheel  ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci"
    - useradd --user-group --create-home --groups=wheel --shell=/bin/bash public
    - cat /etc/passwd
    - cat /etc/group

.build: &build_definition
  stage: build
  tags:
    - docker
  script:
    - su public --command='/usr/bin/curl -sSL https://gitlab.com/perobertson/scripts/raw/${CI_COMMIT_SHA}/setup.sh | bash'


lint:
  stage: build
  image: python:latest
  tags:
    - docker
  script:
    - pip install --user --upgrade pip
    - pip install --user --upgrade bashate
    - ~/.local/bin/bashate --ignore=E006 $(find . -name '*.sh')
    - apt-get update && apt-get install shellcheck
    - shellcheck --external-sources setup.sh $(find . -name '*.sh' -path '**/latest/**')


fedora_25:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:25
  allow_failure: true


fedora_26:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:26
  allow_failure: true


fedora_27:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:27


fedora_28:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:28


fedora_29:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:29
  allow_failure: true


fedora_rawhide:
  <<: *fedora_setup
  <<: *build_definition
  image: fedora:rawhide
  allow_failure: true


ubuntu_16_04:
  <<: *ubuntu_setup
  <<: *build_definition
  image: ubuntu:16.04


ubuntu_18_04:
  <<: *ubuntu_setup
  <<: *build_definition
  image: ubuntu:18.04


deploy_github:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${GITHUB_KEY}" > ~/.ssh/id_rsa
    - echo "${GITHUB_KEY_PUB}" > ~/.ssh/id_rsa.pub
    - chmod 700 ~/.ssh/id_rsa*
    - ssh-keyscan 'github.com' >> ~/.ssh/known_hosts
    - git remote add github -t master git@github.com:perobertson/scripts.git
    - git fetch --all --verbose
    - git checkout -B ${CI_COMMIT_REF_SLUG}
    - git push --set-upstream github ${CI_COMMIT_REF_SLUG}
  environment:
    name: github
  only:
    refs:
      - master
