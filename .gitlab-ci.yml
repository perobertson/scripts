variables:
  # https://bixense.com/clicolors/ standard for enabling colours in CI
  CLICOLOR: 1

.build:
  interruptible: true
  stage: build
  tags:
    - docker
  script:
    # MRs create duplicate pipelines
    # https://gitlab.com/gitlab-org/gitlab/-/issues/201845#note_399196241
    - |
      if [ -n "${GITLAB_TOKEN}" ] && [ "${CI_PIPELINE_SOURCE}" == 'push' ]; then \
        OPENED_MR_ON_BRANCH="$(curl --header "Private-Token: $GITLAB_TOKEN" "https://$CI_SERVER_HOST/api/v4/merge_requests?project_id=$CI_PROJECT_ID&source_branch=$CI_COMMIT_BRANCH&state=opened")"; \
        if [ "${OPENED_MR_ON_BRANCH}" != "[]" ]; then \
          echo "There is at least one MR opened on branch $CI_COMMIT_BRANCH. Stopping the push pipeline in favor of the merge request pipeline"; \
          exit 1; \
        fi; \
      fi
    - ./.gitlab/build.sh
    - su public --command='$HOME/Applications/scripts/.gitlab/check_versions.sh'

.setup_archlinux:
  before_script:
    - ./.gitlab/setup_archlinux.sh

.setup_fedora:
  before_script:
    - ./.gitlab/setup_fedora.sh

.setup_ubuntu:
  before_script:
    - ./.gitlab/setup_ubuntu.sh

.rules_common_files: &rules_common_files
  - .gitlab-ci.yml
  - "**/*.sh"
  - setup.yml
  - ansible.cfg
  - bin/*
  - files/**/*
  - tasks/system/*.yml
  - tasks/user/*.yml

# Someday sequences will be mergable
# https://github.com/yaml/yaml/issues/48
.rules_archlinux:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
      - bootstrap/(arch|manjaro).sh
      - tasks/system/archlinux/**/*
      - tasks/user/archlinux/**/*

.rules_debian: &rules_debian
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
      - bootstrap/(ubuntu).sh
      - tasks/system/debian/**/*
      - tasks/user/debian/**/*

.rules_redhat: &rules_redhat
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
      - bootstrap/(fedora).sh
      - tasks/system/redhat/**/*
      - tasks/user/redhat/**/*

lint:
  interruptible: true
  stage: build
  image: koalaman/shellcheck-alpine
  tags:
    - docker
  script:
    - shellcheck --external-sources setup.sh $(find . -name '*.sh' -path '**/latest/**')

archlinux:
  extends:
    - .build
    - .setup_archlinux
    - .rules_archlinux
  image: archlinux/base:latest

fedora_28:
  # EOL: 2019-05-28
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:28

fedora_29:
  # EOL: 2019-11-30
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:29

fedora_30:
  # EOL: 2020-05-26
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:30

fedora_31:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:31

fedora_32:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:32

fedora_33:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:33
  allow_failure: true

fedora_rawhide:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:rawhide
  allow_failure: true

manjaro:
  extends:
    - .build
    - .setup_archlinux
    - .rules_archlinux
  image: manjarolinux/base:latest

ubuntu_18_04:
  # EOL: 2023-04
  extends:
    - .build
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:18.04

ubuntu_20_04:
  # EOL: 2025-04
  extends:
    - .build
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:20.04

deploy_github:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${GITHUB_KEY}" > ~/.ssh/id_rsa
    - echo "${GITHUB_KEY_PUB}" > ~/.ssh/id_rsa.pub
    - chmod 700 ~/.ssh/id_rsa*
    - ssh-keyscan 'github.com' >> ~/.ssh/known_hosts
    - git remote add github -t main git@github.com:perobertson/scripts.git
    - git fetch --all --verbose
    - git checkout -B "${CI_COMMIT_REF_NAME}"
    - git push --set-upstream github "${CI_COMMIT_REF_NAME}"
  after_script:
    - rm ~/.ssh/id_rsa
    - rm ~/.ssh/id_rsa.pub
  environment:
    name: github
  resource_group: github
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
