.build:
  interruptible: true
  stage: build
  tags:
    - docker
  script:
    - su public --command='/usr/bin/curl -sSL https://gitlab.com/perobertson/scripts/raw/${CI_COMMIT_SHA}/setup.sh | bash'
    - su public --command='git status --short && test "$(git status --short)" = ""'
    - su public --command='cd "$HOME/Applications/dotfiles" && git status --short && test "$(git status --short)" = ""'
  after_script:
    - ansible --version
    - bash --version
    - code --version
    - curl --version
    - docker --version
    - docker-compose --version
    - flameshot --version
    - flatpak --version
    - gcc --version
    - git --version
    - gzip --version
    - jq --version
    - keybase --version
    - make --version
    - node --version
    - npm --version
    - pip --version
    - python --version
    - python3 --version
    - shellcheck --version
    - ssh -V
    - tree --version
    - wget --version
    - xz --version
    - zsh --version
    # These commands do not have a version option
    - command -v gitk

.setup_archlinux:
  before_script:
    - whoami
    - echo "$HOME"
    - pwd
    - ls -laH
    - pacman -Sy --noconfirm sudo
    - "echo '%wheel  ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci"
    - useradd --user-group --create-home --groups=wheel --shell=/bin/bash public
    - cat /etc/passwd
    - cat /etc/group

.setup_fedora:
  before_script:
    - whoami
    - echo "$HOME"
    - pwd
    - ls -laH
    - dnf install -y sudo
    - "echo '%wheel  ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci"
    - useradd --user-group --create-home --groups=wheel --shell=/bin/bash public
    - cat /etc/passwd
    - cat /etc/group

.setup_ubuntu:
  before_script:
    - whoami
    - echo "$HOME"
    - pwd
    - ls -laH
    - apt-get update
    - apt-get install -y curl sudo
    - "echo '%sudo  ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ci"
    - useradd --user-group --create-home --groups=sudo --shell=/bin/bash public
    - cat /etc/passwd
    - cat /etc/group

# Someday sequences will be mergable
# https://github.com/yaml/yaml/issues/48
.rules_archlinux:
  rules:
    ### All
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_MERGE_REQUEST_ID
    - changes:
        - .gitlab-ci.yml
        - "**/*.sh"
        - setup.yml
        - ansible.cfg
        - bin/*
        - files/**/*
        - tasks/system/*.yml
        - tasks/user/*.yml
    ### specific
    - changes:
      - bootstrap/(arch|manjaro).sh
      - tasks/system/archlinux/**/*
      - tasks/user/archlinux/**/*

.rules_debian: &rules_debian
  rules:
    ### All
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_MERGE_REQUEST_ID
    - changes:
        - .gitlab-ci.yml
        - "**/*.sh"
        - setup.yml
        - ansible.cfg
        - bin/*
        - files/**/*
        - tasks/system/*.yml
        - tasks/user/*.yml
    ### specific
    - changes:
      - bootstrap/(ubuntu).sh
      - tasks/system/debian/**/*
      - tasks/user/debian/**/*

.rules_redhat: &rules_redhat
  rules:
    ### All
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_MERGE_REQUEST_ID
    - changes:
        - .gitlab-ci.yml
        - "**/*.sh"
        - setup.yml
        - ansible.cfg
        - bin/*
        - files/**/*
        - tasks/system/*.yml
        - tasks/user/*.yml
    ### specific
    - changes:
      - bootstrap/(fedora).sh
      - tasks/system/redhat/**/*
      - tasks/user/redhat/**/*

lint:
  interruptible: true
  stage: build
  image: koalaman/shellcheck-alpine
  tags:
    - docker
  script:
    - shellcheck --external-sources setup.sh $(find . -name '*.sh' -path '**/latest/**')

archlinux:
  extends:
    - .build
    - .setup_archlinux
    - .rules_archlinux
  image: archlinux/base:latest

fedora_28:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:28

fedora_29:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:29

fedora_30:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:30

fedora_31:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:31

fedora_32:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:32
  allow_failure: true

fedora_rawhide:
  extends:
    - .build
    - .setup_fedora
    - .rules_redhat
  image: fedora:rawhide
  allow_failure: true

manjaro:
  extends:
    - .build
    - .setup_archlinux
    - .rules_archlinux
  image: manjarolinux/base:latest

ubuntu_18_04:
  # EOL: 2023-04
  extends:
    - .build
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:18.04

ubuntu_20_04:
  # EOL: 2025-04
  extends:
    - .build
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:20.04

deploy_github:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${GITHUB_KEY}" > ~/.ssh/id_rsa
    - echo "${GITHUB_KEY_PUB}" > ~/.ssh/id_rsa.pub
    - chmod 700 ~/.ssh/id_rsa*
    - ssh-keyscan 'github.com' >> ~/.ssh/known_hosts
    - git remote add github -t master git@github.com:perobertson/scripts.git
    - git fetch --all --verbose
    - git checkout -B ${CI_COMMIT_REF_SLUG}
    - git push --set-upstream github ${CI_COMMIT_REF_SLUG}
  environment:
    name: github
  resource_group: github
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
