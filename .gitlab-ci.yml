# Debian EOL dates https://wiki.debian.org/DebianReleases
# Fedora EOL dates https://fedorapeople.org/groups/schedule/
# Ubuntu EOL dates https://wiki.ubuntu.com/Releases
---
default:
  interruptible: true
  tags:
    - docker

stages:
  - build
  - lint
  - test
  - deploy

variables:
  ANSIBLE_CONFIG: "./config/ansible.cfg"
  ANSIBLE_FORCE_COLOR: "1"
  # https://bixense.com/clicolors/ standard for enabling colours in CI
  CLICOLOR: "1"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

.build_img:
  stage: build
  image:
    # debug image has a shell
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  needs:
    - job: lint:shellcheck
      artifacts: false

.test:
  stage: test
  needs:
    - job: lint:shellcheck
      artifacts: false
    - job: lint:ansible
      artifacts: false
  script:
    - ./.gitlab/build.bash
    - su public --command="./.gitlab/check_versions.bash"

# TODO: replace .test with this
.test_new:
  stage: test
  script:
    # Container runs as root to support systemd as the init system
    # switch to the test user 'public' to run the scripts like a user would
    - su public --command="./setup.sh"
    - su public --command="./.gitlab/check_versions.bash"
    - su public --command="./.gitlab/verify_no_changes.sh"

.setup_ubuntu:
  before_script:
    - ./.gitlab/setup_ubuntu.bash

.rules_lint:
  rules:
    ### Always
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_IID

.rules_common_files: &rules_common_files
  - .gitlab-ci.yml
  - "**/*.bash"
  - "**/*.sh"
  - setup.sh
  - setup.yml
  - ansible.cfg
  - bin/*
  - files/**/*
  - tasks/system/*.yml
  - tasks/user/*.yml

# Someday sequences will be mergable
# https://github.com/yaml/yaml/issues/48
.rules_archlinux:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
        - bootstrap/(arch|manjaro).bash
        - tasks/system/archlinux/**/*
        - tasks/user/archlinux/**/*

.rules_debian:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
        - bootstrap/(debian|ubuntu).bash
        - tasks/system/debian/**/*
        - tasks/user/debian/**/*

.rules_redhat:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
    ### All
    - changes: *rules_common_files
    ### specific
    - changes:
        - bootstrap/(centos|fedora).bash
        - tasks/system/redhat/**/*
        - tasks/user/redhat/**/*

.rules_eol:
  rules:
    - when: manual
      allow_failure: true

build:linter:
  stage: build
  image:
    # debug image has a shell
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  needs: []
  script:
    - mkdir -p /kaniko/.docker
    - |
      tee /kaniko/.docker/config.json <<-JSON
      {
        "auths": {
          "$CI_REGISTRY": {
            "username":"$CI_REGISTRY_USER",
            "password":"$CI_REGISTRY_PASSWORD"
          }
        }
      }
      JSON
    - >
      /kaniko/executor
      --cleanup
      --cache
      --cache-repo $CI_REGISTRY_IMAGE/cache
      --context $CI_PROJECT_DIR
      --destination $CI_REGISTRY_IMAGE/linter:$CI_COMMIT_REF_SLUG
      --dockerfile $CI_PROJECT_DIR/.gitlab/linter.dockerfile

build:archlinux:latest:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh archlinux latest

build:centos:stream8:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh centos stream8

build:centos:stream9:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh centos stream9

build:debian:10:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh debian 10

build:debian:11:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh debian 11

build:fedora:28:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 28

build:fedora:29:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 29

build:fedora:30:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 30

build:fedora:31:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 31

build:fedora:32:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 32

build:fedora:33:
  extends:
    - .build_img
    - .rules_eol
  script:
    - ./.gitlab/build_image.sh fedora 33

build:fedora:34:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh fedora 34

build:fedora:35:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh fedora 35

build:fedora:36:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh fedora 36

build:fedora:rawhide:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh fedora rawhide

build:manjarolinux:latest:
  extends:
    - .build_img
  script:
    - ./.gitlab/build_image.sh manjarolinux latest

lint:shellcheck:
  extends:
    - .rules_lint
  stage: .pre
  image: koalaman/shellcheck-alpine
  script:
    - shellcheck --external-sources setup.sh $(find . -name '*.sh' -path '**/latest/**')

lint:ansible:
  extends:
    - .rules_lint
  stage: lint
  image: $CI_REGISTRY_IMAGE/linter:$CI_COMMIT_REF_SLUG
  needs:
    - job: build:linter
      artifacts: false
  script:
    - make ansible-lint
    # Also check all other non ansible files
    - yamllint -f parsable .

test:archlinux:latest:
  extends:
    - .test_new
    - .rules_archlinux
  image: ${CI_REGISTRY}/perobertson/scripts/archlinux:latest-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:archlinux:latest
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:centos:stream8:
  # EOL: 2024-05-31
  extends:
    - .test_new
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/centos:stream8-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:centos:stream8
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:centos:stream9:
  extends:
    - .test_new
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/centos:stream9-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:centos:stream9
      artifacts: false
    - job: lint:ansible
      artifacts: false
  # unreleased
  allow_failure: true

test:debian:10:
  # EOL: ~2022
  extends:
    - .test_new
    - .rules_debian
  image: ${CI_REGISTRY}/perobertson/scripts/debian:10-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:debian:10
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:debian:11:
  extends:
    - .test_new
    - .rules_debian
  image: ${CI_REGISTRY}/perobertson/scripts/debian:11-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:debian:11
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:28:
  # EOL: 2019-05-28
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:28-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:28
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:29:
  # EOL: 2019-11-30
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:29-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:29
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:30:
  # EOL: 2020-05-26
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:30-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:30
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:31:
  # EOL: 2020-11-24
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:31-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:31
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:32:
  # EOL: 2021-05-25
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:32-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:32
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:33:
  # EOL: 2021-12-01
  extends:
    - .test
    - .rules_eol
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:33-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:33
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:34:
  # EOL: 2022-05-17
  extends:
    - .test
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:34-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:34
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:35:
  # EOL: 2022-11-15
  extends:
    - .test
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:35-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:35
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:fedora:36:
  # EOL: 2022-05-16
  extends:
    - .test
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:36-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:36
      artifacts: false
    - job: lint:ansible
      artifacts: false
  # unreleased
  allow_failure: true

test:fedora:rawhide:
  extends:
    - .test_new
    - .rules_redhat
  image: ${CI_REGISTRY}/perobertson/scripts/fedora:rawhide-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:fedora:rawhide
      artifacts: false
    - job: lint:ansible
      artifacts: false
  # unreleased
  allow_failure: true

test:manjarolinux:latest:
  extends:
    - .test_new
    - .rules_archlinux
  image: ${CI_REGISTRY}/perobertson/scripts/manjarolinux:latest-${CI_COMMIT_REF_SLUG}
  needs:
    - job: build:manjarolinux:latest
      artifacts: false
    - job: lint:ansible
      artifacts: false

test:ubuntu_18_04:
  # EOL: 2023-04
  # Python 3.6 EOL: 2021-12-23
  extends:
    - .test
    - .setup_ubuntu
    - .rules_eol
  image: ubuntu:18.04

test:ubuntu_20_04:
  # EOL: 2025-04
  extends:
    - .test
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:20.04

test:ubuntu_21_04:
  # EOL: 2022-01
  # replace this job with the rolling short term release
  # https://wiki.ubuntu.com/Releases
  extends:
    - .test
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:21.04

test:ubuntu_21_10:
  # EOL: 2022-07
  # replace this job with the rolling short term release
  # https://wiki.ubuntu.com/Releases
  extends:
    - .test
    - .setup_ubuntu
    - .rules_debian
  image: ubuntu:21.10

deploy:github:
  stage: deploy
  interruptible: false
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${GITHUB_KEY}" > ~/.ssh/id_rsa
    - echo "${GITHUB_KEY_PUB}" > ~/.ssh/id_rsa.pub
    - chmod 700 ~/.ssh/id_rsa*
    - ssh-keyscan 'github.com' >> ~/.ssh/known_hosts
    - git remote add github -t main git@github.com:perobertson/scripts.git
    - git fetch --all --verbose
    - git checkout -B "${CI_COMMIT_REF_NAME}"
    - git push --set-upstream github "${CI_COMMIT_REF_NAME}"
  after_script:
    - rm ~/.ssh/id_rsa
    - rm ~/.ssh/id_rsa.pub
  environment:
    name: github
  resource_group: github
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
